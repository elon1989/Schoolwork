{"ast":null,"code":"import _slicedToArray from \"C:/skolarbete/React/3-29/brandon uppgift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\skolarbete\\\\React\\\\3-29\\\\brandon uppgift2\\\\src\\\\Counter.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { increment, decrement, increaseBy60, increaseByAmount } from \"./redux/ducks/counter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Counter = function Counter() {\n  _s();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var count = useSelector(function (state) {\n    return state.counter.count;\n  });\n  var dispatch = useDispatch();\n\n  var handleIncreaseByAmount = function handleIncreaseByAmount() {\n    var valueInt = parseInt(value);\n    dispatch(increaseByAmount(valueInt));\n    setValue(0);\n  };\n\n  var handleChangeAmount = function handleChangeAmount(e) {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChangeAmount,\n      name: \"value\",\n      value: value,\n      id: \"customValue\",\n      placeholder: \"Enter value...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIncreaseByAmount,\n      children: \"Add value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Counter, \"UHcG3sSxCpK+nZG5oPsB0bF1vlY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/skolarbete/React/3-29/brandon uppgift2/src/Counter.jsx"],"names":["useState","useSelector","useDispatch","increment","decrement","increaseBy60","increaseByAmount","Counter","value","setValue","count","state","counter","dispatch","handleIncreaseByAmount","valueInt","parseInt","handleChangeAmount","e","target"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,gBAJF,QAKO,uBALP;;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,kBACMP,QAAQ,CAAC,CAAD,CADd;AAAA;AAAA,MACbQ,KADa;AAAA,MACNC,QADM;;AAGpB,MAAMC,KAAK,GAAGT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAN,CAAcF,KAAzB;AAAA,GAAD,CAAzB;AACA,MAAMG,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,MAAMY,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,QAAIC,QAAQ,GAAGC,QAAQ,CAACR,KAAD,CAAvB;AACAK,IAAAA,QAAQ,CAACP,gBAAgB,CAACS,QAAD,CAAjB,CAAR;AACAN,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAJD;;AAMA,MAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,CAAD,EAAO;AAChCT,IAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASX,KAAV,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AACE,MAAA,QAAQ,EAAEO,kBADZ;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAET,KAHT;AAIE,MAAA,EAAE,EAAC,aAJL;AAKE,MAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,aAHF,eAUE;AAAQ,MAAA,OAAO,EAAEM,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CA9BD;;GAAMP,O;UAGUN,W,EACGC,W;;;KAJbK,O;AAgCN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  increment,\n  decrement,\n  increaseBy60,\n  increaseByAmount\n} from \"./redux/ducks/counter\";\n\nconst Counter = () => {\n  const [value, setValue] = useState(0);\n\n  const count = useSelector((state) => state.counter.count);\n  const dispatch = useDispatch();\n\n  const handleIncreaseByAmount = () => {\n    let valueInt = parseInt(value);\n    dispatch(increaseByAmount(valueInt));\n    setValue(0);\n  };\n\n  const handleChangeAmount = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Counter</h1>\n      <h2>{count}</h2>\n      <input\n        onChange={handleChangeAmount}\n        name=\"value\"\n        value={value}\n        id=\"customValue\"\n        placeholder=\"Enter value...\"\n      ></input>\n      <button onClick={handleIncreaseByAmount}>Add value</button>\n    </div>\n  );\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}