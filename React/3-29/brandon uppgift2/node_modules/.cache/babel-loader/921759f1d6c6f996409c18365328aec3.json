{"ast":null,"code":"import _objectSpread from \"C:/skolarbete/React/3-29/brandon uppgift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// action variabel\nvar DECREMENT = \"decrement\";\nvar INCREMENT = \"increment\";\nvar INCREASE60 = \"increase60\";\nvar INCREASEBYAMOUNT = \"increaseByAmount\"; // actions\n\nexport var increment = function increment() {\n  return {\n    type: INCREMENT\n  };\n};\nexport var decrement = function decrement() {\n  return {\n    type: DECREMENT\n  };\n};\nexport var increaseBy60 = function increaseBy60() {\n  return {\n    type: INCREASE60\n  };\n};\nexport var increaseByAmount = function increaseByAmount(amount) {\n  return {\n    type: INCREASEBYAMOUNT,\n    payload: {\n      value: amount,\n      test: \"test this\"\n    }\n  };\n};\nvar initialState = {\n  count: 5,\n  isDarkMode: false\n}; //reducer\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + 1\n      });\n\n    case DECREMENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count - 1\n      });\n\n    case INCREASE60:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + 60\n      });\n\n    case INCREASEBYAMOUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + action.payload.value\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/skolarbete/React/3-29/brandon uppgift2/src/redux/ducks/counter.js"],"names":["DECREMENT","INCREMENT","INCREASE60","INCREASEBYAMOUNT","increment","type","decrement","increaseBy60","increaseByAmount","amount","payload","value","test","initialState","count","isDarkMode","state","action"],"mappings":";AAAA;AACA,IAAMA,SAAS,GAAG,WAAlB;AACA,IAAMC,SAAS,GAAG,WAAlB;AACA,IAAMC,UAAU,GAAG,YAAnB;AACA,IAAMC,gBAAgB,GAAG,kBAAzB,C,CAEA;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AAC9BC,IAAAA,IAAI,EAAEJ;AADwB,GAAP;AAAA,CAAlB;AAIP,OAAO,IAAMK,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AAC9BD,IAAAA,IAAI,EAAEL;AADwB,GAAP;AAAA,CAAlB;AAIP,OAAO,IAAMO,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO;AACjCF,IAAAA,IAAI,EAAEH;AAD2B,GAAP;AAAA,CAArB;AAIP,OAAO,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD;AAAA,SAAa;AAC3CJ,IAAAA,IAAI,EAAEF,gBADqC;AAE3CO,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAEF,MADA;AAEPG,MAAAA,IAAI,EAAE;AAFC;AAFkC,GAAb;AAAA,CAAzB;AAQP,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB,C,CAKA;;AAEA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC/C,UAAQA,MAAM,CAACZ,IAAf;AACE,SAAKJ,SAAL;AACE,6CAAYe,KAAZ;AAAmBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAxC;;AACF,SAAKd,SAAL;AACE,6CAAYgB,KAAZ;AAAmBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAxC;;AACF,SAAKZ,UAAL;AACE,6CAAYc,KAAZ;AAAmBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAxC;;AACF,SAAKX,gBAAL;AACE,6CAAYa,KAAZ;AAAmBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACP,OAAP,CAAeC;AAAvD;;AACF;AACE,aAAOK,KAAP;AAVJ;AAYD,CAbD","sourcesContent":["// action variabel\nconst DECREMENT = \"decrement\";\nconst INCREMENT = \"increment\";\nconst INCREASE60 = \"increase60\";\nconst INCREASEBYAMOUNT = \"increaseByAmount\";\n\n// actions\nexport const increment = () => ({\n  type: INCREMENT\n});\n\nexport const decrement = () => ({\n  type: DECREMENT\n});\n\nexport const increaseBy60 = () => ({\n  type: INCREASE60\n});\n\nexport const increaseByAmount = (amount) => ({\n  type: INCREASEBYAMOUNT,\n  payload: {\n    value: amount,\n    test: \"test this\"\n  }\n});\n\nconst initialState = {\n  count: 5,\n  isDarkMode: false\n};\n\n//reducer\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return { ...state, count: state.count + 1 };\n    case DECREMENT:\n      return { ...state, count: state.count - 1 };\n    case INCREASE60:\n      return { ...state, count: state.count + 60 };\n    case INCREASEBYAMOUNT:\n      return { ...state, count: state.count + action.payload.value };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}