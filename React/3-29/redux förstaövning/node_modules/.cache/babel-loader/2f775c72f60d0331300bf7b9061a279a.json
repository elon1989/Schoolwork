{"ast":null,"code":"import _objectSpread from \"C:/skolarbete/React/3-29/redux f\\xF6rsta\\xF6vning/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// action variabel\nvar INCREMENT = \"increment\";\nvar DECREMENT = \"decrement\";\nvar INCREASE60 = \"increase60\";\nvar INCREASEBYAMOUNT = 'increaseByAmount'; //action\n\nexport var increment = function increment() {\n  return {\n    type: INCREMENT\n  };\n};\nexport var decrement = function decrement() {\n  return {\n    type: DECREMENT\n  };\n};\nexport var increase60 = function increase60() {\n  return {\n    type: INCREASE60\n  };\n};\nexport var increaseByAmount = function increaseByAmount(amount) {\n  return {\n    type: INCREASEBYAMOUNT,\n    payload: {\n      value: amount\n    }\n  };\n}; //initial value\n\nvar initialState = {\n  count: 0,\n  isDarkMode: true\n}; //reducer\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREASEBYAMOUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + 5\n      });\n\n    case DECREMENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count - 1\n      });\n\n    case INCREMENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + 1\n      });\n\n    case INCREASE60:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + 60\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/skolarbete/React/3-29/redux förstaövning/src/redux/ducks/counter.js"],"names":["INCREMENT","DECREMENT","INCREASE60","INCREASEBYAMOUNT","increment","type","decrement","increase60","increaseByAmount","amount","payload","value","initialState","count","isDarkMode","state","action"],"mappings":";AAAA;AACA,IAAMA,SAAS,GAAG,WAAlB;AACA,IAAMC,SAAS,GAAG,WAAlB;AACA,IAAMC,UAAU,GAAG,YAAnB;AACA,IAAMC,gBAAgB,GAAG,kBAAzB,C,CAEA;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AAC9BC,IAAAA,IAAI,EAAEL;AADwB,GAAP;AAAA,CAAlB;AAGP,OAAO,IAAMM,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AAC9BD,IAAAA,IAAI,EAAEJ;AADwB,GAAP;AAAA,CAAlB;AAGP,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAO;AAC/BF,IAAAA,IAAI,EAAEH;AADyB,GAAP;AAAA,CAAnB;AAGP,OAAO,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD;AAAA,SAAa;AAC3CJ,IAAAA,IAAI,EAAEF,gBADqC;AAE3CO,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAEF;AADA;AAFkC,GAAb;AAAA,CAAzB,C,CAOP;;AACA,IAAMG,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB,C,CAKA;;AACA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC/C,UAAQA,MAAM,CAACX,IAAf;AACE,SAAKF,gBAAL;AACE,6CAAYY,KAAZ;AAAmBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAxC;;AACF,SAAKZ,SAAL;AACE,6CAAYc,KAAZ;AAAmBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAxC;;AACF,SAAKb,SAAL;AACE,6CAAYe,KAAZ;AAAmBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAxC;;AACF,SAAKX,UAAL;AACE,6CAAYa,KAAZ;AAAmBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAxC;;AACF;AACE,aAAOE,KAAP;AAVJ;AAYD,CAbD","sourcesContent":["// action variabel\r\nconst INCREMENT = \"increment\";\r\nconst DECREMENT = \"decrement\";\r\nconst INCREASE60 = \"increase60\";\r\nconst INCREASEBYAMOUNT = 'increaseByAmount';\r\n\r\n//action\r\nexport const increment = () => ({\r\n  type: INCREMENT\r\n});\r\nexport const decrement = () => ({\r\n  type: DECREMENT\r\n});\r\nexport const increase60 = () => ({\r\n  type: INCREASE60\r\n});\r\nexport const increaseByAmount = (amount) => ({\r\n  type: INCREASEBYAMOUNT,\r\n  payload: {\r\n    value: amount\r\n  }\r\n})\r\n\r\n//initial value\r\nconst initialState = {\r\n  count: 0,\r\n  isDarkMode: true\r\n};\r\n\r\n//reducer\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCREASEBYAMOUNT:\r\n      return { ...state, count: state.count + 5};\r\n    case DECREMENT:\r\n      return { ...state, count: state.count - 1 };\r\n    case INCREMENT:\r\n      return { ...state, count: state.count + 1 };\r\n    case INCREASE60:\r\n      return { ...state, count: state.count + 60 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}